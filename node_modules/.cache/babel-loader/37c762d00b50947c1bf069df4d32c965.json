{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\React\\\\spotify-clone\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport ScrubBar from './components/scrubBar/scrubBar.jsx';\nimport NavButton from './components/navButton/navButton.jsx';\nimport SearchModule from './components/searchModule/searchModule.jsx';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.outsideRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      body: \"\",\n      songs: []\n    };\n  }\n\n  async componentDidMount() {\n    document.addEventListener('click', this.handleClickOutside);\n    const response = await fetch(\"http://localhost:5000\");\n    const data = await response.json();\n    console.log(data);\n    data.forEach(song => {\n      const songSchema = {\n        songName: \"\",\n        songPicture: \"\",\n        isSearching: false\n      };\n      songSchema.songName = song.result.full_title;\n      songSchema.songPicture = song.result.song_art_image_thumbnail_url;\n      let joined = this.state.songs.concat(songSchema);\n      this.setState({\n        songs: joined\n      });\n    });\n    console.log(this.state.songs);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClickOutside);\n  }\n\n  handleClickOutside(e) {\n    if (this.outsideRef && !this.outsideRef.current.contains(e.target)) {\n      console.log(\"clicked outside!\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      ref: this.outsideRef,\n      children: [/*#__PURE__*/_jsxDEV(SearchModule, {\n        isVisible: this.state.isSearching\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sideNav\",\n        children: [/*#__PURE__*/_jsxDEV(NavButton, {\n          text: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavButton, {\n          text: \"Search\",\n          onClick: () => this.setState({\n            isSearching: !this.state.isSearching\n          }, () => {\n            console.log(this.state.isSearching);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: this.state.songs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contentItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: song.songPicture,\n            className: \"contentItemPicture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contentItemName\",\n            children: song.songName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScrubBar, {\n        className: \"scrubBar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/React/spotify-clone/client/src/App.js"],"names":["React","Component","ReactDOM","ScrubBar","NavButton","SearchModule","App","constructor","props","outsideRef","createRef","state","body","songs","componentDidMount","document","addEventListener","handleClickOutside","response","fetch","data","json","console","log","forEach","song","songSchema","songName","songPicture","isSearching","result","full_title","song_art_image_thumbnail_url","joined","concat","setState","componentWillUnmount","removeEventListener","e","current","contains","target","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport ScrubBar from './components/scrubBar/scrubBar.jsx';\nimport NavButton from './components/navButton/navButton.jsx';\nimport SearchModule from './components/searchModule/searchModule.jsx';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.outsideRef = React.createRef();\n\n    this.state = {\n      body: \"\",\n      songs: [],\n    }\n  }\n\n  async componentDidMount() {\n\n    document.addEventListener('click', this.handleClickOutside);\n\n    const response = await fetch(\"http://localhost:5000\")\n    const data = await response.json()\n\n    console.log(data);\n\n    data.forEach(song => {\n\n      const songSchema = {\n        songName: \"\",\n        songPicture: \"\",\n        isSearching: false\n      }\n\n      songSchema.songName = song.result.full_title;\n      songSchema.songPicture = song.result.song_art_image_thumbnail_url;\n\n      let joined = this.state.songs.concat(songSchema)\n      this.setState({songs: joined})\n    })\n\n    console.log(this.state.songs);\n\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClickOutside)\n  }\n\n  handleClickOutside(e) {\n    if(this.outsideRef && !this.outsideRef.current.contains(e.target)) {\n      console.log(\"clicked outside!\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"main\" ref={this.outsideRef}>\n\n        <SearchModule isVisible={this.state.isSearching} />\n\n        <div className=\"sideNav\">\n          <NavButton text=\"Home\" />\n          <NavButton text=\"Search\" onClick={() => this.setState({isSearching: !this.state.isSearching}, () => {\n            console.log(this.state.isSearching);\n          })} />\n        </div>\n\n        <div className=\"content\">\n          {\n            this.state.songs.map(song =>\n            <div className=\"contentItem\">\n              <img src={song.songPicture} className=\"contentItemPicture\"></img>\n              <div className=\"contentItemName\">{song.songName}</div>\n            </div>\n          )\n          }\n        </div>\n\n        <ScrubBar className=\"scrubBar\" />\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}